# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 1
default_floating_border normal

# Hide borders
hide_edge_borders smart

# change borders
#bindsym $mod+b TODO:toggle borders with this?
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:JetBrains Mono ExtraBold, FontAwesome 12
title_align center
 
# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec terminal

# kill focused window
bindsym $mod+q kill

# start program launcher/switcher
bindsym $mod+d exec --no-startup-id rofi -show run -no-lazy-grab
bindsym $mod+Tab exec --no-startup-id rofi -show window -no-lazy-grab

#exec --no-startup-id volumeicon
#bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
exec --no-startup-id start-pulseaudio-x11
exec --no-startup-id pa-applet
bindsym $mod+Ctrl+m exec pavucontrol

# GUI Application Keybinds
# [W]eb browser
bindsym $mod+w exec firefox
bindsym $mod+Shift+w exec firefox --private-window
# [A]udio controls
bindsym $mod+a exec pavucontrol

# focus_follows_mouse no

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
#bindsym $mod+Shift+j move left
#bindsym $mod+Shift+k move down
#bindsym $mod+Shift+l move up
#bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split orientation
bindsym $mod+h split h;exec dunstify -r 8001 'tile horizontally' -t 2000
bindsym $mod+v split v;exec dunstify -r 8001'tile vertically' -t 2000

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking; exec dunstify -r 8002 'layout: stacking' -t 2000
bindsym $mod+t layout tabbed; exec dunstify -r 8002 'layout: tabbed' -t 2000
bindsym $mod+e layout toggle split; exec dunstify -r 8002 'layout: split' -t 2000

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# center a floating window 
bindsym $mod+space move position center

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+p focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1 1:
set $ws2 2:
set $ws3 3:
set $ws4 4:
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# Open applications on specific workspaces
assign [class="Spotify"] $ws3
assign [class="Slack"] $ws4
assign [class="Steam"] $ws5
for_window [class="Spotify"] move container to workspace $ws3
for_window [class="Slack"] move container to workspace $ws4
for_window [class="Steam"] border pixel 1; move container to workspace $ws5

# Specify floating window types
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_role="About"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [class="pavucontrol"] floating enable

for_window [class="(u|U)(r|R)xvt" title="calendar"] floating enable, resize set 350 300, move position 1900 50, border pixel 2

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (s)uspend, (h)ibernate, (r)eboot, (shift+S)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym $mod+0 mode "default" 
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize window (you can also use the mouse for that)
set $mode_resize Resize: (arrow keys) to grow/shrink, (space) to center floating window
bindsym $mod+r mode "$mode_resize"
mode "$mode_resize" {
     	#resize (left/right to grow/shrink width, up/down to grow/shrink height)
        bindsym Left resize shrink width 40 px or 5 ppt
        bindsym Right resize grow width 40 px or 5 ppt 

	bindsym Down resize grow height 40 px or 5 ppt
        bindsym Up resize shrink height 40 px or 5 ppt

	# center
	bindsym space move position center
	
        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
	bindsym $mod+r mode "default"
}

# Lock screen
bindsym $mod+9 exec --no-startup-id i3exit switch_user, mode "default"
bindsym $mod+Shift+l exec --no-startup-id i3exit switch_user, mode "default"

# Autostart applications
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id nitrogen --restore; sleep 1; picom -b
exec --no-startup-id xfce4-power-manager
exec --no-startup-id clipit -n
exec_always --no-startup-id fix_xcursor
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Color palette used for the terminal ( ~/.Xresources file )
# Colors are gathered based on the documentation:
# https://i3wm.org/docs/userguide.html#xresources
# Change the variable name at the place you want to match the color
# of your terminal like this:
# [example]
# If you want your bar to have the same background color as your 
# terminal background change the line 362 from:
# background #14191D
# to:
# background $term_background
# Same logic applied to everything else.
set_from_resource $term_background .background
set_from_resource $term_foreground .foreground
set_from_resource $term_black      .color0
set_from_resource $term_red        .color1
set_from_resource $term_green      .color2
set_from_resource $term_yellow     .color3
set_from_resource $term_blue       .color4
set_from_resource $term_magenta    .color5
set_from_resource $term_cyan       .color6
set_from_resource $term_white      .color7
set_from_resource $term_b_black    .color8
set_from_resource $term_b_red      .color9
set_from_resource $term_b_green    .color10
set_from_resource $term_b_yellow   .color11
set_from_resource $term_b_blue     .color12
set_from_resource $term_b_magenta  .color13
set_from_resource $term_b_cyan     .color14
set_from_resource $term_b_white    .color15


# remember to propagate color changes to dunst and rofi
#TODO: automate this better

set_from_resource $bg .bg
set_from_resource $bg_dark .bg_dark
set_from_resource $bg_light .bg_light
set_from_resource $fg .fg
set_from_resource $fg_dim .fg_dim
set_from_resource $fg_err .fg_err
set_from_resource $fg_highlight .fg_highlight

# window type           border	      backgr.  text          indic.        child_border
client.focused          $fg_highlight $bg      $fg_highlight $fg_highlight $fg_highlight
client.focused_inactive $bg_light     $bg_dark $fg_dim       $fg_err	   $fg_highlight
client.unfocused        $bg_light     $bg_dark $fg_dim       $fg_err	   $bg
client.urgent           $fg_err       $bg_dark $fg_err       $fg_err	   $bg
client.placeholder      $fg_err       $bg_dark $fg	     $fg_err	   $fg_highlight
client.background       $fg_highlight
  
# Start i3bar to display a workspace bar (plus the system information i3status if available)
#bar {
#	i3bar_command i3bar
#	status_command i3status
#	position top
#	height 25
#
# please set your primary output first. Example: 'xrandr --output eDP1 --primary'
#	tray_output primary
#	tray_output eDP-1
#
#	bindsym button4 nop
#	bindsym button5 nop
#	strip_workspace_numbers yes
#	workspace_min_width 40
#	separator_symbol "  "
#
#    colors {
#        background $bg_dark
#        statusline #ffffff
#        separator  $fg_highlight
#
##                          border  backgr. text
#        focused_workspace  $fg_highlight $bg $fg_highlight
#        active_workspace   $bg_light $bg $fg
#        inactive_workspace $bg_light $bg_dark $fg_dim
#        binding_mode       $bg_dark $bg_light $fg_highlight
#        urgent_workspace   $fg_err $fg_dim $fg_err
#
#    }
#}

# hide/unhide i3status bar
bindsym $mod+m bar mode toggle

#border dialog
set $mode_borders Borders: # of pixels (0 to 5)
bindsym $mod+b mode "$mode_borders"
mode "$mode_borders" {
     bindsym 0 border pixel 0 ; mode "default"
     bindsym 1 border pixel 1 ; mode "default"
     bindsym 2 border pixel 2 ; mode "default"
     bindsym 3 border pixel 3 ; mode "default"
     bindsym 4 border pixel 4 ; mode "default"
     bindsym 5 border pixel 5 ; mode "default"
     bindsym Return mode "default"
     bindsym Escape mode "default"
}

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 0
gaps outer 0

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (d)efault, (n)one/(0), adjust (o)uter, adjust (i)nner
set $mode_gaps_outer Outer Gaps: +/-/0, (i) switch to inner
set $mode_gaps_inner Inner Gaps: +/-/0, (o) switch to outer
bindsym $mod+g mode "$mode_gaps"

mode "$mode_gaps" {
     	bindsym d gaps inner all set 10; gaps outer all set 0; mode "default"
	bindsym n gaps inner all set 0; gaps outer all set 0; mode "default"
	bindsym 0 gaps inner all set 0; gaps outer all set 0; mode "default"
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner all plus 5
        bindsym minus gaps inner all minus 5
        bindsym 0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym o mode "$mode_gaps_outer"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer all plus 5
        bindsym minus gaps outer all minus 5
        bindsym 0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym i mode "$mode_gaps_inner"
}

# send track control keycodes to playerctl, volume control keycodes to amixer
bindsym XF86AudioPlay exec "playerctl play-pause"
bindsym XF86AudioNext exec "playerctl next"
bindsym XF86AudioPrev exec "playerctl previous"
bindsym XF86AudioRaiseVolume exec "amixer -M sset Master 5%+ unmute playback"; exec dunstify -r 8888 -t 2000 "Volume: $(awk -F"[][]" '/Front Left: Playback/ { print $2 }' <(amixer -M sget Master))"
bindsym XF86AudioLowerVolume exec "amixer -M sset Master 5%- unmute playback"; exec dunstify -r 8888 -t 2000 "Volume: $(awk -F"[][]" '/Front Left: Playback/ { print $2 }' <(amixer -M sget Master))"
bindsym XF86AudioMute exec "amixer sset Master toggle,mute,playback"

